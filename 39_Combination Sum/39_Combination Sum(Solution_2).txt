class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        Arrays.sort(candidates);
        List<List<Integer>> ans = new ArrayList<>();
        if(candidates==null) return ans;
        help(ans,new ArrayList<>(),0,target,candidates);
        return ans;
    }

    void help(List<List<Integer>> ans,List<Integer> cur,int start,int target,int[] candidates){
        if(target==0){
            ans.add(new ArrayList(cur));
            return;
        }
        //if(target<0)
        //    return;
        for(int i=start ; i<candidates.length ; i++){
            if(target-candidates[i]>=0){
                cur.add(candidates[i]);
                help(ans,cur,i,target-candidates[i],candidates);
                cur.remove(cur.size()-1);
            }
            //else
            //    break;
        }
    }
}