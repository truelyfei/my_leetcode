class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> ans=new ArrayList<>();
        help(candidates,0,candidates.length,target,new ArrayList<>(),ans);
        return ans;
    }

    void help(int[] candidates, int start, int end,int target,List<Integer> list,List<List<Integer>> ans){
        if(target==0){
        ans.add(new ArrayList<>(list));
        return;
        }
        if(start>=end || target<0)
        return;

        //help(candidates,start+1,end,target,list,ans);
        list.add(candidates[start]);
        help(candidates,start,end,target-candidates[start],list,ans);
        list.remove(list.size()-1); // 把list 中的值复原

        help(candidates,start+1,end,target,list,ans);
 }
}